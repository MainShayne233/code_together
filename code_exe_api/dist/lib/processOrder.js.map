{"version":3,"sources":["../../src/lib/processOrder.js"],"names":["processOrder","order","error","sanitizedOrder","costs","totalCost","bestCost","unitCost","quantity"],"mappings":";;;;;kBAKwBA,Y;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,MAAI,CAACA,KAAL,EAAY;AACV,WAAO;AACLC,aAAO;AADF,KAAP;AAGD;AACD,MAAMC,iBAAiB,6BAAcF,KAAd,CAAvB;AACA,MAAI,wBAAcC,KAAlB,EAAyB;AACvB,WAAO;AACLA,aAAO,wBAAcA;AADhB,KAAP;AAGD;;AAED,iCAAgBC,cAAhB;;AAEA,MAAMC,QAAQ,qBAAS,EAACH,OAAOE,cAAR,EAAT,CAAd;;AAEA,SAAO,EAACE,WAAWD,MAAME,QAAN,CAAeC,QAAf,GAA0BJ,eAAeK,QAArD,EAAP;AACD","file":"processOrder.js","sourcesContent":["import _ from 'lodash'\nimport sanitizeOrder from './sanitizeOrder'\nimport processOrderUps from './processOrderUps'\nimport costsFor from './costs/costs'\n\nexport default function processOrder(order) {\n  if (!order) {\n    return {\n      error: \"Missing order parameter\",\n    }\n  }\n  const sanitizedOrder = sanitizeOrder(order)\n  if (sanitizeOrder.error) {\n    return {\n      error: sanitizeOrder.error\n    }\n  }\n\n  processOrderUps(sanitizedOrder)\n\n  const costs = costsFor({order: sanitizedOrder})\n\n  return {totalCost: costs.bestCost.unitCost * sanitizedOrder.quantity}\n}\n"]}