{"version":3,"sources":["../../src/lib/sanitizeOrder.js"],"names":["sanitizeOrder","order","sanitizedOrder","length","sanitizeFloat","width","depth","style","sanitizeString","material","color","stock","sanitizeStock","quantity","sanitizeNumber","inkExterior","inkInterior","necessaryAttrs","missingAttrs","filter","attr","error","join","replace","sanitizeParam","param","sanitize","_","camelCase","string","toLowerCase","float","parseFloat","number","parseInt"],"mappings":";;;;;kBAAwBA,a;AAAT,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;;AAE3C,MAAMC,iBAAiB;AACrBC,YAAQC,cAAcH,MAAME,MAApB,CADa;AAErBE,WAAOD,cAAcH,MAAMI,KAApB,CAFc;AAGrBC,WAAOF,cAAcH,MAAMK,KAApB,CAHc;AAIrBC,WAAOC,eAAeP,MAAMM,KAArB,CAJc;AAKrBE,cAAUD,eAAeP,MAAMQ,QAArB,CALW;AAMrBC,WAAOF,eAAeP,MAAMS,KAArB,CANc;AAOrBC,WAAOC,cAAcX,MAAMU,KAApB,CAPc;AAQrBE,cAAUC,eAAeb,MAAMY,QAArB,CARW;AASrBE,iBAAaX,cAAcH,MAAMc,WAApB,CATQ;AAUrBC,iBAAaZ,cAAcH,MAAMe,WAApB;AAVQ,GAAvB;;AAaA,MAAMC,iBAAiB,CACrB,QADqB,EAErB,OAFqB,EAGrB,OAHqB,EAIrB,OAJqB,EAKrB,UALqB,EAMrB,OANqB,EAOrB,OAPqB,EAQrB,UARqB,CAAvB;;AAWA,MAAIC,eAAeD,eAAeE,MAAf,CAAsB,gBAAQ;AAC/C,WAAOjB,eAAekB,IAAf,MAAyB,SAAhC;AACD,GAFkB,CAAnB;AAGA,MAAIF,aAAaf,MAAjB,EAAyB;AACvB,WAAO;AACLkB,2BAAmBH,aAAaI,IAAb,CAAkB,IAAlB;AADd,KAAP;AAGD;;AAED,SAAOpB,cAAP;AACD;;AAED,SAASU,aAAT,CAAuBD,KAAvB,EAA8B;AAC5B,SAAOH,eAAeG,KAAf,EAAsBY,OAAtB,CAA8B,QAA9B,EAAwC,EAAxC,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAMC,WAAWC,EAAEC,SAAF,CAAYH,KAAZ,CAAjB;AACA,SAAOC,aAAa,EAAb,GAAkB,SAAlB,GAA8BA,QAArC;AACD;;AAED,SAASlB,cAAT,CAAwBqB,MAAxB,EAAgC;AAC9B,SAAOA,SAASA,OAAOC,WAAP,EAAT,GAAgC,SAAvC;AACD;;AAED,SAAS1B,aAAT,CAAuB2B,KAAvB,EAA8B;AAC5B,SAAOA,QAAQC,WAAWD,KAAX,CAAR,GAA4B,SAAnC;AACD;;AAED,SAASjB,cAAT,CAAwBmB,MAAxB,EAAgC;AAC9B,SAAOA,SAASC,SAASD,MAAT,CAAT,GAA4B,SAAnC;AACD","file":"sanitizeOrder.js","sourcesContent":["export default function sanitizeOrder(order) {\n\n  const sanitizedOrder = {\n    length: sanitizeFloat(order.length),\n    width: sanitizeFloat(order.width),\n    depth: sanitizeFloat(order.depth),\n    style: sanitizeString(order.style),\n    material: sanitizeString(order.material),\n    color: sanitizeString(order.color),\n    stock: sanitizeStock(order.stock),\n    quantity: sanitizeNumber(order.quantity),\n    inkExterior: sanitizeFloat(order.inkExterior),\n    inkInterior: sanitizeFloat(order.inkInterior),\n  }\n\n  const necessaryAttrs = [\n    'length',\n    'width',\n    'depth',\n    'style',\n    'material',\n    'color',\n    'stock',\n    'quantity',\n  ]\n\n  let missingAttrs = necessaryAttrs.filter(attr => {\n    return sanitizedOrder[attr] === 'missing'\n  })\n  if (missingAttrs.length) {\n    return {\n      error: `Missing: ${missingAttrs.join(', ')}`\n    }\n  }\n\n  return sanitizedOrder\n}\n\nfunction sanitizeStock(stock) {\n  return sanitizeString(stock).replace('-flute', '')\n}\n\nfunction sanitizeParam(param) {\n  const sanitize = _.camelCase(param)\n  return sanitize === '' ? 'missing' : sanitize\n}\n\nfunction sanitizeString(string) {\n  return string ? string.toLowerCase() : 'missing'\n}\n\nfunction sanitizeFloat(float) {\n  return float ? parseFloat(float) : 'missing'\n}\n\nfunction sanitizeNumber(number) {\n  return number ? parseInt(number) : 'missing'\n}\n"]}